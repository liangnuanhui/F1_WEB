services:
  # 主Web服务
  - type: web
    name: f1-web-api
    env: python
    buildCommand: "cd backend && pip install -r requirements.txt"
    startCommand: "cd backend && bash start.sh web"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: f1-web-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: f1-web-redis
          property: connectionString
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: PYTHONPATH
        value: /opt/render/project/src/backend

  # Celery Worker服务
  - type: worker
    name: f1-web-worker
    env: python
    buildCommand: "cd backend && pip install -r requirements.txt"
    startCommand: "cd backend && bash start.sh worker"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: f1-web-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: f1-web-redis
          property: connectionString
      - key: PYTHONPATH
        value: /opt/render/project/src/backend

  # Celery Beat调度器
  - type: worker
    name: f1-web-scheduler
    env: python
    buildCommand: "cd backend && pip install -r requirements.txt"
    startCommand: "cd backend && bash start.sh scheduler"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: f1-web-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: f1-web-redis
          property: connectionString
      - key: PYTHONPATH
        value: /opt/render/project/src/backend

databases:
  - name: f1-web-db
    databaseName: f1_web
    user: f1_user

services:
  - type: redis
    name: f1-web-redis
    maxmemoryPolicy: allkeys-lru