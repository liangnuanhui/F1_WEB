"""确保模型完整性，保留position_text字段

Revision ID: f0fa87eb95f6
Revises: a3a28584ca20
Create Date: 2025-07-01 12:46:55.056505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f0fa87eb95f6'
down_revision: Union[str, Sequence[str], None] = 'a3a28584ca20'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 检查列是否存在再删除，避免在新数据库中出错
    connection = op.get_bind()

    # 检查races表是否有race_time列
    result = connection.execute(
        "SELECT column_name FROM information_schema.columns WHERE table_name='races' AND column_name='race_time'"
    )
    if result.fetchone():
        op.drop_column('races', 'race_time')

    # 检查seasons表是否有is_active列
    result = connection.execute(
        "SELECT column_name FROM information_schema.columns WHERE table_name='seasons' AND column_name='is_active'"
    )
    if result.fetchone():
        op.drop_column('seasons', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('seasons', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.add_column('races', sa.Column('race_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='正赛开始时间（UTC）'))
    # ### end Alembic commands ###
